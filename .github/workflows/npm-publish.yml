# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Publish Node.js Package

on:
  push:
    branches:
      - main

jobs:

  check-version-change:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check-version.outputs.version-changed }} # 输出版本是否变化
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install @actions/request
      - name: Get previous version
        id: get-previous-version
        uses: actions/github-script@v6
        with:
          script: |
            const request = require('@actions/request');
            const { owner, repo } = context.repo;
            const response = await request.get(`https://api.github.com/repos/${owner}/${repo}/commits?per_page=1`);
            const data = JSON.parse(response.data);
            const previousSha = data[0].sha;
            const previousPackageJson = await request.get(`https://raw.githubusercontent.com/${owner}/${repo}/${previousSha}/package.json`);
            const previousVersion = JSON.parse(previousPackageJson.data).version;
            return previousVersion;
      - name: Get current version
        run: echo "CURRENT_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV
      - name: Compare versions
        id: check-version
        run: |
          echo "Previous version: ${{ steps.get-previous-version.outputs.result }}"
          echo "Current version: ${{ env.CURRENT_VERSION }}"
          if [[ "${{ steps.get-previous-version.outputs.result }}" != "${{ env.CURRENT_VERSION }}" ]]; then
            echo "::set-output name=version-changed::true"
          else
            echo "::set-output name=version-changed::false"
          fi

  build-publish:
    needs: check-version-change # 依赖 check-version-change job
    if: needs.check-version-change.outputs.version-changed == 'true' # 仅在版本变化时执行
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - uses: pnpm/action-setup@v4
        with:
          version: 9.10.0

      - run: pnpm install
      - run: pnpm build
      - run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
